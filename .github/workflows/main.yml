name: Build and deploy a container to an Amazon Container Registry

env:
  APP_NAME: speed-test
  AWS_REGION: ap-south-1

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Extract ECR repository URI
        id: ecr
        run: |
          echo "::set-output name=uri::$(aws ecr describe-repositories --repository-names ${{ env.APP_NAME }} --region ${{ secrets.AWS_REGION }} --query "repositories[0].repositoryUri" --output text)"

      - name: Print ECR URI
        run: echo ${{ steps.ecr.outputs.uri }}

        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Build and push Docker image
        run: |
          docker buildx build --platform linux/amd64 -t ${{ steps.ecr.outputs.uri }}:${{ github.sha }} --push .
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to Elastic Beanstalk
        env:
          ENVIRONMENT_NAME: Speed-test-env-1
          VERSION_LABEL: ${{ github.sha }}
          S3_BUCKET: elasticbeanstalk-ap-south-1-767397785039
          DOCKER_IMAGE: ${{ steps.ecr.outputs.uri }}:${{ github.sha }}
        run: |
          # Create a Dockerrun.aws.json file
          cat <<EOF > Dockerrun.aws.json
          {
            "AWSEBDockerrunVersion": 1,
            "Image": {
              "Name": "$DOCKER_IMAGE",
              "Update": "true"
            },
            "Ports": [
              {
                "ContainerPort": "80"
              }
            ]
          }
          EOF

          # Zip the Dockerrun.aws.json file
          zip deploy.zip Dockerrun.aws.json

          # Upload the zip file to S3
          aws s3 cp deploy.zip s3://$S3_BUCKET/$VERSION_LABEL-deploy.zip

          # Create a new application version
          aws elasticbeanstalk create-application-version --application-name ${{ env.APP_NAME }} --version-label $VERSION_LABEL --source-bundle S3Bucket=$S3_BUCKET,S3Key=$VERSION_LABEL-deploy.zip

          # Update the environment to use the new version
          aws elasticbeanstalk update-environment --environment-name $ENVIRONMENT_NAME --version-label $VERSION_LABEL
